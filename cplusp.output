Terminals which are not used

   INVALID


State 12 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce
State 71 conflicts: 5 shift/reduce
State 79 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement statement_list
    3               | statement

    4 statement: declaration_statement TERMINATOR
    5          | assignment_statement TERMINATOR
    6          | expression TERMINATOR
    7          | control_statement
    8          | function_declaration
    9          | function_call TERMINATOR
   10          | loops
   11          | break_statement TERMINATOR
   12          | return_statement TERMINATOR

   13 DATA_TYPE: TYPE_INT
   14          | TYPE_FLOAT
   15          | TYPE_CHAR
   16          | TYPE_BOOL
   17          | TYPE_INT '[' ']'
   18          | TYPE_INT '[' ']' '[' ']'
   19          | TYPE_FILE

   20 VALUE: INT
   21      | FLOAT
   22      | CHAR
   23      | BOOL

   24 declaration_statement: DATA_TYPE variable_list

   25 variable_list: VARIABLE ',' variable_list
   26              | VARIABLE
   27              | VARIABLE ASSIGNMENT expression ',' variable_list
   28              | VARIABLE ASSIGNMENT expression
   29              | VARIABLE '[' expression ']' ',' variable_list
   30              | VARIABLE '[' expression ']'
   31              | VARIABLE '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   32              | VARIABLE '[' expression ']' ASSIGNMENT '{' expression '}'
   33              | VARIABLE '[' expression ']' '[' expression ']' ',' variable_list
   34              | VARIABLE '[' expression ']' '[' expression ']'
   35              | VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}'

   37 control_statement: IF '(' expression ')' '{' statement_list '}'
   38                  | IF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'
   39                  | IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'
   40                  | '(' expression ')' '?' statement ':' statement

   41 loops: FOR VARIABLE ASSIGNMENT expression ',' expression '{' statement_list '}'
   42      | FOR VARIABLE ASSIGNMENT expression ',' expression ',' expression '{' statement_list '}'
   43      | WHILE '(' expression ')' '{' statement_list '}'

   44 break_statement: BREAK

   45 return_statement: RETURN expression
   46                 | RETURN

   47 operator: UNARY
   48         | BINARY
   49         | ARITHMATIC
   50         | LOGICAL
   51         | ASSIGNMENT

   52 expression: expression operator expression
   53           | '(' expression ')'
   54           | VARIABLE
   55           | VARIABLE '[' expression ']'
   56           | VARIABLE '[' expression ']' '[' expression ']'
   57           | VALUE
   58           | STRING
   59           | function_call
   60           | assignment_statement

   61 assignment_statement: VARIABLE ASSIGNMENT expression

   62 parameter_list: DATA_TYPE VARIABLE ',' parameter_list
   63               | DATA_TYPE VARIABLE
   64               | DATA_TYPE VARIABLE '[' ']' ',' parameter_list
   65               | DATA_TYPE VARIABLE '[' ']'
   66               | DATA_TYPE VARIABLE '[' ']' '[' ']' ',' parameter_list
   67               | DATA_TYPE VARIABLE '[' ']' '[' ']'

   68 argument_list: expression ',' argument_list
   69              | expression

   70 function_name: VARIABLE
   71              | DATA_TYPE

   72 function_declaration: DATA_TYPE function_name '(' parameter_list ')' '{' statement_list '}'
   73                     | DATA_TYPE function_name '(' ')' '{' statement_list '}'
   74                     | TYPE_VOID function_name '(' parameter_list ')' '{' statement_list '}'
   75                     | TYPE_VOID function_name '(' ')' '{' statement_list '}'

   76 function_call: function_name '(' argument_list ')'
   77              | function_name '(' ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 37 38 39 40 43 53 72 73 74 75 76 77
')' (41) 37 38 39 40 43 53 72 73 74 75 76 77
',' (44) 25 27 29 31 33 35 41 42 62 64 66 68
':' (58) 40
'?' (63) 40
'[' (91) 17 18 29 30 31 32 33 34 35 36 55 56 64 65 66 67
']' (93) 17 18 29 30 31 32 33 34 35 36 55 56 64 65 66 67
'{' (123) 31 32 35 36 37 38 39 41 42 43 72 73 74 75
'}' (125) 31 32 35 36 37 38 39 41 42 43 72 73 74 75
error (256)
TYPE_VOID (258) 74 75
UNARY (259) 47
BINARY (260) 48
ARITHMATIC (261) 49
LOGICAL (262) 50
ASSIGNMENT (263) 27 28 31 32 35 36 41 42 51 61
TERMINATOR (264) 4 5 6 9 11 12
IF (265) 37 38 39
ELIF (266) 39
ELSE (267) 38 39
FOR (268) 41 42
WHILE (269) 43
RETURN (270) 45 46
BREAK (271) 44
INT (272) 20
FLOAT (273) 21
CHAR (274) 22
BOOL (275) 23
STRING (276) 58
VARIABLE (277) 25 26 27 28 29 30 31 32 33 34 35 36 41 42 54 55 56 61
    62 63 64 65 66 67 70
INVALID (278)
TYPE_INT (279) 13 17 18
TYPE_FLOAT (280) 14
TYPE_CHAR (281) 15
TYPE_BOOL (282) 16
TYPE_FILE (283) 19


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
statement_list (40)
    on left: 2 3, on right: 1 2 37 38 39 41 42 43 72 73 74 75
statement (41)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 3 40
DATA_TYPE (42)
    on left: 13 14 15 16 17 18 19, on right: 24 62 63 64 65 66 67 71
    72 73
VALUE (43)
    on left: 20 21 22 23, on right: 57
declaration_statement (44)
    on left: 24, on right: 4
variable_list (45)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36, on right: 24 25 27
    29 31 33 35
control_statement (46)
    on left: 37 38 39 40, on right: 7
loops (47)
    on left: 41 42 43, on right: 10
break_statement (48)
    on left: 44, on right: 11
return_statement (49)
    on left: 45 46, on right: 12
operator (50)
    on left: 47 48 49 50 51, on right: 52
expression (51)
    on left: 52 53 54 55 56 57 58 59 60, on right: 6 27 28 29 30 31
    32 33 34 35 36 37 38 39 40 41 42 43 45 52 53 55 56 61 68 69
assignment_statement (52)
    on left: 61, on right: 5 60
parameter_list (53)
    on left: 62 63 64 65 66 67, on right: 62 64 66 72 74
argument_list (54)
    on left: 68 69, on right: 68 76
function_name (55)
    on left: 70 71, on right: 72 73 74 75 76 77
function_declaration (56)
    on left: 72 73 74 75, on right: 8
function_call (57)
    on left: 76 77, on right: 9 59


state 0

    0 $accept: . program $end

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    program                go to state 19
    statement_list         go to state 20
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 1

   74 function_declaration: TYPE_VOID . function_name '(' parameter_list ')' '{' statement_list '}'
   75                     | TYPE_VOID . function_name '(' ')' '{' statement_list '}'

    VARIABLE    shift, and go to state 34
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17

    DATA_TYPE      go to state 35
    function_name  go to state 36


state 2

   37 control_statement: IF . '(' expression ')' '{' statement_list '}'
   38                  | IF . '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'
   39                  | IF . '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'

    '('  shift, and go to state 37


state 3

   41 loops: FOR . VARIABLE ASSIGNMENT expression ',' expression '{' statement_list '}'
   42      | FOR . VARIABLE ASSIGNMENT expression ',' expression ',' expression '{' statement_list '}'

    VARIABLE  shift, and go to state 38


state 4

   43 loops: WHILE . '(' expression ')' '{' statement_list '}'

    '('  shift, and go to state 39


state 5

   45 return_statement: RETURN . expression
   46                 | RETURN .

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    $default  reduce using rule 46 (return_statement)

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 41
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 6

   44 break_statement: BREAK .

    $default  reduce using rule 44 (break_statement)


state 7

   20 VALUE: INT .

    $default  reduce using rule 20 (VALUE)


state 8

   21 VALUE: FLOAT .

    $default  reduce using rule 21 (VALUE)


state 9

   22 VALUE: CHAR .

    $default  reduce using rule 22 (VALUE)


state 10

   23 VALUE: BOOL .

    $default  reduce using rule 23 (VALUE)


state 11

   58 expression: STRING .

    $default  reduce using rule 58 (expression)


state 12

   54 expression: VARIABLE .
   55           | VARIABLE . '[' expression ']'
   56           | VARIABLE . '[' expression ']' '[' expression ']'
   61 assignment_statement: VARIABLE . ASSIGNMENT expression
   70 function_name: VARIABLE .

    ASSIGNMENT  shift, and go to state 44
    '['         shift, and go to state 45

    ASSIGNMENT  [reduce using rule 54 (expression)]
    '('         reduce using rule 70 (function_name)
    $default    reduce using rule 54 (expression)


state 13

   13 DATA_TYPE: TYPE_INT .
   17          | TYPE_INT . '[' ']'
   18          | TYPE_INT . '[' ']' '[' ']'

    '['  shift, and go to state 46

    $default  reduce using rule 13 (DATA_TYPE)


state 14

   14 DATA_TYPE: TYPE_FLOAT .

    $default  reduce using rule 14 (DATA_TYPE)


state 15

   15 DATA_TYPE: TYPE_CHAR .

    $default  reduce using rule 15 (DATA_TYPE)


state 16

   16 DATA_TYPE: TYPE_BOOL .

    $default  reduce using rule 16 (DATA_TYPE)


state 17

   19 DATA_TYPE: TYPE_FILE .

    $default  reduce using rule 19 (DATA_TYPE)


state 18

   40 control_statement: '(' . expression ')' '?' statement ':' statement
   53 expression: '(' . expression ')'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 47
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 19

    0 $accept: program . $end

    $end  shift, and go to state 48


state 20

    1 program: statement_list .

    $default  reduce using rule 1 (program)


state 21

    2 statement_list: statement . statement_list
    3               | statement .

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 3 (statement_list)

    statement_list         go to state 49
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 22

   24 declaration_statement: DATA_TYPE . variable_list
   71 function_name: DATA_TYPE .
   72 function_declaration: DATA_TYPE . function_name '(' parameter_list ')' '{' statement_list '}'
   73                     | DATA_TYPE . function_name '(' ')' '{' statement_list '}'

    VARIABLE    shift, and go to state 50
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17

    $default  reduce using rule 71 (function_name)

    DATA_TYPE      go to state 35
    variable_list  go to state 51
    function_name  go to state 52


state 23

   57 expression: VALUE .

    $default  reduce using rule 57 (expression)


state 24

    4 statement: declaration_statement . TERMINATOR

    TERMINATOR  shift, and go to state 53


state 25

    7 statement: control_statement .

    $default  reduce using rule 7 (statement)


state 26

   10 statement: loops .

    $default  reduce using rule 10 (statement)


state 27

   11 statement: break_statement . TERMINATOR

    TERMINATOR  shift, and go to state 54


state 28

   12 statement: return_statement . TERMINATOR

    TERMINATOR  shift, and go to state 55


state 29

    6 statement: expression . TERMINATOR
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    TERMINATOR  shift, and go to state 61

    operator  go to state 62


state 30

    5 statement: assignment_statement . TERMINATOR
   60 expression: assignment_statement .

    TERMINATOR  shift, and go to state 63

    TERMINATOR  [reduce using rule 60 (expression)]
    $default    reduce using rule 60 (expression)


state 31

   76 function_call: function_name . '(' argument_list ')'
   77              | function_name . '(' ')'

    '('  shift, and go to state 64


state 32

    8 statement: function_declaration .

    $default  reduce using rule 8 (statement)


state 33

    9 statement: function_call . TERMINATOR
   59 expression: function_call .

    TERMINATOR  shift, and go to state 65

    TERMINATOR  [reduce using rule 59 (expression)]
    $default    reduce using rule 59 (expression)


state 34

   70 function_name: VARIABLE .

    $default  reduce using rule 70 (function_name)


state 35

   71 function_name: DATA_TYPE .

    $default  reduce using rule 71 (function_name)


state 36

   74 function_declaration: TYPE_VOID function_name . '(' parameter_list ')' '{' statement_list '}'
   75                     | TYPE_VOID function_name . '(' ')' '{' statement_list '}'

    '('  shift, and go to state 66


state 37

   37 control_statement: IF '(' . expression ')' '{' statement_list '}'
   38                  | IF '(' . expression ')' '{' statement_list '}' ELSE '{' statement_list '}'
   39                  | IF '(' . expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 67
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 38

   41 loops: FOR VARIABLE . ASSIGNMENT expression ',' expression '{' statement_list '}'
   42      | FOR VARIABLE . ASSIGNMENT expression ',' expression ',' expression '{' statement_list '}'

    ASSIGNMENT  shift, and go to state 68


state 39

   43 loops: WHILE '(' . expression ')' '{' statement_list '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 69
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 40

   53 expression: '(' . expression ')'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 70
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 41

   45 return_statement: RETURN expression .
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60

    $default  reduce using rule 45 (return_statement)

    operator  go to state 62


state 42

   60 expression: assignment_statement .

    $default  reduce using rule 60 (expression)


state 43

   59 expression: function_call .

    $default  reduce using rule 59 (expression)


state 44

   61 assignment_statement: VARIABLE ASSIGNMENT . expression

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 71
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 45

   55 expression: VARIABLE '[' . expression ']'
   56           | VARIABLE '[' . expression ']' '[' expression ']'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 72
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 46

   17 DATA_TYPE: TYPE_INT '[' . ']'
   18          | TYPE_INT '[' . ']' '[' ']'

    ']'  shift, and go to state 73


state 47

   40 control_statement: '(' expression . ')' '?' statement ':' statement
   52 expression: expression . operator expression
   53           | '(' expression . ')'

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ')'         shift, and go to state 74

    operator  go to state 62


state 48

    0 $accept: program $end .

    $default  accept


state 49

    2 statement_list: statement statement_list .

    $default  reduce using rule 2 (statement_list)


state 50

   25 variable_list: VARIABLE . ',' variable_list
   26              | VARIABLE .
   27              | VARIABLE . ASSIGNMENT expression ',' variable_list
   28              | VARIABLE . ASSIGNMENT expression
   29              | VARIABLE . '[' expression ']' ',' variable_list
   30              | VARIABLE . '[' expression ']'
   31              | VARIABLE . '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   32              | VARIABLE . '[' expression ']' ASSIGNMENT '{' expression '}'
   33              | VARIABLE . '[' expression ']' '[' expression ']' ',' variable_list
   34              | VARIABLE . '[' expression ']' '[' expression ']'
   35              | VARIABLE . '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE . '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}'
   70 function_name: VARIABLE .

    ASSIGNMENT  shift, and go to state 75
    '['         shift, and go to state 76
    ','         shift, and go to state 77

    '('       reduce using rule 70 (function_name)
    $default  reduce using rule 26 (variable_list)


state 51

   24 declaration_statement: DATA_TYPE variable_list .

    $default  reduce using rule 24 (declaration_statement)


state 52

   72 function_declaration: DATA_TYPE function_name . '(' parameter_list ')' '{' statement_list '}'
   73                     | DATA_TYPE function_name . '(' ')' '{' statement_list '}'

    '('  shift, and go to state 78


state 53

    4 statement: declaration_statement TERMINATOR .

    $default  reduce using rule 4 (statement)


state 54

   11 statement: break_statement TERMINATOR .

    $default  reduce using rule 11 (statement)


state 55

   12 statement: return_statement TERMINATOR .

    $default  reduce using rule 12 (statement)


state 56

   47 operator: UNARY .

    $default  reduce using rule 47 (operator)


state 57

   48 operator: BINARY .

    $default  reduce using rule 48 (operator)


state 58

   49 operator: ARITHMATIC .

    $default  reduce using rule 49 (operator)


state 59

   50 operator: LOGICAL .

    $default  reduce using rule 50 (operator)


state 60

   51 operator: ASSIGNMENT .

    $default  reduce using rule 51 (operator)


state 61

    6 statement: expression TERMINATOR .

    $default  reduce using rule 6 (statement)


state 62

   52 expression: expression operator . expression

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 79
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 63

    5 statement: assignment_statement TERMINATOR .

    $default  reduce using rule 5 (statement)


state 64

   76 function_call: function_name '(' . argument_list ')'
   77              | function_name '(' . ')'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40
    ')'         shift, and go to state 80

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 81
    assignment_statement  go to state 42
    argument_list         go to state 82
    function_name         go to state 31
    function_call         go to state 43


state 65

    9 statement: function_call TERMINATOR .

    $default  reduce using rule 9 (statement)


state 66

   74 function_declaration: TYPE_VOID function_name '(' . parameter_list ')' '{' statement_list '}'
   75                     | TYPE_VOID function_name '(' . ')' '{' statement_list '}'

    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    ')'         shift, and go to state 83

    DATA_TYPE       go to state 84
    parameter_list  go to state 85


state 67

   37 control_statement: IF '(' expression . ')' '{' statement_list '}'
   38                  | IF '(' expression . ')' '{' statement_list '}' ELSE '{' statement_list '}'
   39                  | IF '(' expression . ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ')'         shift, and go to state 86

    operator  go to state 62


state 68

   41 loops: FOR VARIABLE ASSIGNMENT . expression ',' expression '{' statement_list '}'
   42      | FOR VARIABLE ASSIGNMENT . expression ',' expression ',' expression '{' statement_list '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 87
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 69

   43 loops: WHILE '(' expression . ')' '{' statement_list '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ')'         shift, and go to state 88

    operator  go to state 62


state 70

   52 expression: expression . operator expression
   53           | '(' expression . ')'

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ')'         shift, and go to state 89

    operator  go to state 62


state 71

   52 expression: expression . operator expression
   61 assignment_statement: VARIABLE ASSIGNMENT expression .

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60

    UNARY       [reduce using rule 61 (assignment_statement)]
    BINARY      [reduce using rule 61 (assignment_statement)]
    ARITHMATIC  [reduce using rule 61 (assignment_statement)]
    LOGICAL     [reduce using rule 61 (assignment_statement)]
    ASSIGNMENT  [reduce using rule 61 (assignment_statement)]
    $default    reduce using rule 61 (assignment_statement)

    operator  go to state 62


state 72

   52 expression: expression . operator expression
   55           | VARIABLE '[' expression . ']'
   56           | VARIABLE '[' expression . ']' '[' expression ']'

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ']'         shift, and go to state 90

    operator  go to state 62


state 73

   17 DATA_TYPE: TYPE_INT '[' ']' .
   18          | TYPE_INT '[' ']' . '[' ']'

    '['  shift, and go to state 91

    $default  reduce using rule 17 (DATA_TYPE)


state 74

   40 control_statement: '(' expression ')' . '?' statement ':' statement
   53 expression: '(' expression ')' .

    '?'  shift, and go to state 92

    $default  reduce using rule 53 (expression)


state 75

   27 variable_list: VARIABLE ASSIGNMENT . expression ',' variable_list
   28              | VARIABLE ASSIGNMENT . expression

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 93
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 76

   29 variable_list: VARIABLE '[' . expression ']' ',' variable_list
   30              | VARIABLE '[' . expression ']'
   31              | VARIABLE '[' . expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   32              | VARIABLE '[' . expression ']' ASSIGNMENT '{' expression '}'
   33              | VARIABLE '[' . expression ']' '[' expression ']' ',' variable_list
   34              | VARIABLE '[' . expression ']' '[' expression ']'
   35              | VARIABLE '[' . expression ']' '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE '[' . expression ']' '[' expression ']' ASSIGNMENT '{' expression '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 94
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 77

   25 variable_list: VARIABLE ',' . variable_list

    VARIABLE  shift, and go to state 95

    variable_list  go to state 96


state 78

   72 function_declaration: DATA_TYPE function_name '(' . parameter_list ')' '{' statement_list '}'
   73                     | DATA_TYPE function_name '(' . ')' '{' statement_list '}'

    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    ')'         shift, and go to state 97

    DATA_TYPE       go to state 84
    parameter_list  go to state 98


state 79

   52 expression: expression . operator expression
   52           | expression operator expression .

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60

    UNARY       [reduce using rule 52 (expression)]
    BINARY      [reduce using rule 52 (expression)]
    ARITHMATIC  [reduce using rule 52 (expression)]
    LOGICAL     [reduce using rule 52 (expression)]
    ASSIGNMENT  [reduce using rule 52 (expression)]
    $default    reduce using rule 52 (expression)

    operator  go to state 62


state 80

   77 function_call: function_name '(' ')' .

    $default  reduce using rule 77 (function_call)


state 81

   52 expression: expression . operator expression
   68 argument_list: expression . ',' argument_list
   69              | expression .

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ','         shift, and go to state 99

    $default  reduce using rule 69 (argument_list)

    operator  go to state 62


state 82

   76 function_call: function_name '(' argument_list . ')'

    ')'  shift, and go to state 100


state 83

   75 function_declaration: TYPE_VOID function_name '(' ')' . '{' statement_list '}'

    '{'  shift, and go to state 101


state 84

   62 parameter_list: DATA_TYPE . VARIABLE ',' parameter_list
   63               | DATA_TYPE . VARIABLE
   64               | DATA_TYPE . VARIABLE '[' ']' ',' parameter_list
   65               | DATA_TYPE . VARIABLE '[' ']'
   66               | DATA_TYPE . VARIABLE '[' ']' '[' ']' ',' parameter_list
   67               | DATA_TYPE . VARIABLE '[' ']' '[' ']'

    VARIABLE  shift, and go to state 102


state 85

   74 function_declaration: TYPE_VOID function_name '(' parameter_list . ')' '{' statement_list '}'

    ')'  shift, and go to state 103


state 86

   37 control_statement: IF '(' expression ')' . '{' statement_list '}'
   38                  | IF '(' expression ')' . '{' statement_list '}' ELSE '{' statement_list '}'
   39                  | IF '(' expression ')' . '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'

    '{'  shift, and go to state 104


state 87

   41 loops: FOR VARIABLE ASSIGNMENT expression . ',' expression '{' statement_list '}'
   42      | FOR VARIABLE ASSIGNMENT expression . ',' expression ',' expression '{' statement_list '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ','         shift, and go to state 105

    operator  go to state 62


state 88

   43 loops: WHILE '(' expression ')' . '{' statement_list '}'

    '{'  shift, and go to state 106


state 89

   53 expression: '(' expression ')' .

    $default  reduce using rule 53 (expression)


state 90

   55 expression: VARIABLE '[' expression ']' .
   56           | VARIABLE '[' expression ']' . '[' expression ']'

    '['  shift, and go to state 107

    $default  reduce using rule 55 (expression)


state 91

   18 DATA_TYPE: TYPE_INT '[' ']' '[' . ']'

    ']'  shift, and go to state 108


state 92

   40 control_statement: '(' expression ')' '?' . statement ':' statement

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement              go to state 109
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 93

   27 variable_list: VARIABLE ASSIGNMENT expression . ',' variable_list
   28              | VARIABLE ASSIGNMENT expression .
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ','         shift, and go to state 110

    $default  reduce using rule 28 (variable_list)

    operator  go to state 62


state 94

   29 variable_list: VARIABLE '[' expression . ']' ',' variable_list
   30              | VARIABLE '[' expression . ']'
   31              | VARIABLE '[' expression . ']' ASSIGNMENT '{' expression '}' ',' variable_list
   32              | VARIABLE '[' expression . ']' ASSIGNMENT '{' expression '}'
   33              | VARIABLE '[' expression . ']' '[' expression ']' ',' variable_list
   34              | VARIABLE '[' expression . ']' '[' expression ']'
   35              | VARIABLE '[' expression . ']' '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE '[' expression . ']' '[' expression ']' ASSIGNMENT '{' expression '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ']'         shift, and go to state 111

    operator  go to state 62


state 95

   25 variable_list: VARIABLE . ',' variable_list
   26              | VARIABLE .
   27              | VARIABLE . ASSIGNMENT expression ',' variable_list
   28              | VARIABLE . ASSIGNMENT expression
   29              | VARIABLE . '[' expression ']' ',' variable_list
   30              | VARIABLE . '[' expression ']'
   31              | VARIABLE . '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   32              | VARIABLE . '[' expression ']' ASSIGNMENT '{' expression '}'
   33              | VARIABLE . '[' expression ']' '[' expression ']' ',' variable_list
   34              | VARIABLE . '[' expression ']' '[' expression ']'
   35              | VARIABLE . '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE . '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}'

    ASSIGNMENT  shift, and go to state 75
    '['         shift, and go to state 76
    ','         shift, and go to state 77

    $default  reduce using rule 26 (variable_list)


state 96

   25 variable_list: VARIABLE ',' variable_list .

    $default  reduce using rule 25 (variable_list)


state 97

   73 function_declaration: DATA_TYPE function_name '(' ')' . '{' statement_list '}'

    '{'  shift, and go to state 112


state 98

   72 function_declaration: DATA_TYPE function_name '(' parameter_list . ')' '{' statement_list '}'

    ')'  shift, and go to state 113


state 99

   68 argument_list: expression ',' . argument_list

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 81
    assignment_statement  go to state 42
    argument_list         go to state 114
    function_name         go to state 31
    function_call         go to state 43


state 100

   76 function_call: function_name '(' argument_list ')' .

    $default  reduce using rule 76 (function_call)


state 101

   75 function_declaration: TYPE_VOID function_name '(' ')' '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 115
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 102

   62 parameter_list: DATA_TYPE VARIABLE . ',' parameter_list
   63               | DATA_TYPE VARIABLE .
   64               | DATA_TYPE VARIABLE . '[' ']' ',' parameter_list
   65               | DATA_TYPE VARIABLE . '[' ']'
   66               | DATA_TYPE VARIABLE . '[' ']' '[' ']' ',' parameter_list
   67               | DATA_TYPE VARIABLE . '[' ']' '[' ']'

    '['  shift, and go to state 116
    ','  shift, and go to state 117

    $default  reduce using rule 63 (parameter_list)


state 103

   74 function_declaration: TYPE_VOID function_name '(' parameter_list ')' . '{' statement_list '}'

    '{'  shift, and go to state 118


state 104

   37 control_statement: IF '(' expression ')' '{' . statement_list '}'
   38                  | IF '(' expression ')' '{' . statement_list '}' ELSE '{' statement_list '}'
   39                  | IF '(' expression ')' '{' . statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 119
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 105

   41 loops: FOR VARIABLE ASSIGNMENT expression ',' . expression '{' statement_list '}'
   42      | FOR VARIABLE ASSIGNMENT expression ',' . expression ',' expression '{' statement_list '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 120
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 106

   43 loops: WHILE '(' expression ')' '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 121
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 107

   56 expression: VARIABLE '[' expression ']' '[' . expression ']'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 122
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 108

   18 DATA_TYPE: TYPE_INT '[' ']' '[' ']' .

    $default  reduce using rule 18 (DATA_TYPE)


state 109

   40 control_statement: '(' expression ')' '?' statement . ':' statement

    ':'  shift, and go to state 123


state 110

   27 variable_list: VARIABLE ASSIGNMENT expression ',' . variable_list

    VARIABLE  shift, and go to state 95

    variable_list  go to state 124


state 111

   29 variable_list: VARIABLE '[' expression ']' . ',' variable_list
   30              | VARIABLE '[' expression ']' .
   31              | VARIABLE '[' expression ']' . ASSIGNMENT '{' expression '}' ',' variable_list
   32              | VARIABLE '[' expression ']' . ASSIGNMENT '{' expression '}'
   33              | VARIABLE '[' expression ']' . '[' expression ']' ',' variable_list
   34              | VARIABLE '[' expression ']' . '[' expression ']'
   35              | VARIABLE '[' expression ']' . '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE '[' expression ']' . '[' expression ']' ASSIGNMENT '{' expression '}'

    ASSIGNMENT  shift, and go to state 125
    '['         shift, and go to state 126
    ','         shift, and go to state 127

    $default  reduce using rule 30 (variable_list)


state 112

   73 function_declaration: DATA_TYPE function_name '(' ')' '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 128
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 113

   72 function_declaration: DATA_TYPE function_name '(' parameter_list ')' . '{' statement_list '}'

    '{'  shift, and go to state 129


state 114

   68 argument_list: expression ',' argument_list .

    $default  reduce using rule 68 (argument_list)


state 115

   75 function_declaration: TYPE_VOID function_name '(' ')' '{' statement_list . '}'

    '}'  shift, and go to state 130


state 116

   64 parameter_list: DATA_TYPE VARIABLE '[' . ']' ',' parameter_list
   65               | DATA_TYPE VARIABLE '[' . ']'
   66               | DATA_TYPE VARIABLE '[' . ']' '[' ']' ',' parameter_list
   67               | DATA_TYPE VARIABLE '[' . ']' '[' ']'

    ']'  shift, and go to state 131


state 117

   62 parameter_list: DATA_TYPE VARIABLE ',' . parameter_list

    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17

    DATA_TYPE       go to state 84
    parameter_list  go to state 132


state 118

   74 function_declaration: TYPE_VOID function_name '(' parameter_list ')' '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 133
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 119

   37 control_statement: IF '(' expression ')' '{' statement_list . '}'
   38                  | IF '(' expression ')' '{' statement_list . '}' ELSE '{' statement_list '}'
   39                  | IF '(' expression ')' '{' statement_list . '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'

    '}'  shift, and go to state 134


state 120

   41 loops: FOR VARIABLE ASSIGNMENT expression ',' expression . '{' statement_list '}'
   42      | FOR VARIABLE ASSIGNMENT expression ',' expression . ',' expression '{' statement_list '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ','         shift, and go to state 135
    '{'         shift, and go to state 136

    operator  go to state 62


state 121

   43 loops: WHILE '(' expression ')' '{' statement_list . '}'

    '}'  shift, and go to state 137


state 122

   52 expression: expression . operator expression
   56           | VARIABLE '[' expression ']' '[' expression . ']'

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ']'         shift, and go to state 138

    operator  go to state 62


state 123

   40 control_statement: '(' expression ')' '?' statement ':' . statement

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement              go to state 139
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 124

   27 variable_list: VARIABLE ASSIGNMENT expression ',' variable_list .

    $default  reduce using rule 27 (variable_list)


state 125

   31 variable_list: VARIABLE '[' expression ']' ASSIGNMENT . '{' expression '}' ',' variable_list
   32              | VARIABLE '[' expression ']' ASSIGNMENT . '{' expression '}'

    '{'  shift, and go to state 140


state 126

   33 variable_list: VARIABLE '[' expression ']' '[' . expression ']' ',' variable_list
   34              | VARIABLE '[' expression ']' '[' . expression ']'
   35              | VARIABLE '[' expression ']' '[' . expression ']' ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE '[' expression ']' '[' . expression ']' ASSIGNMENT '{' expression '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 141
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 127

   29 variable_list: VARIABLE '[' expression ']' ',' . variable_list

    VARIABLE  shift, and go to state 95

    variable_list  go to state 142


state 128

   73 function_declaration: DATA_TYPE function_name '(' ')' '{' statement_list . '}'

    '}'  shift, and go to state 143


state 129

   72 function_declaration: DATA_TYPE function_name '(' parameter_list ')' '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 144
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 130

   75 function_declaration: TYPE_VOID function_name '(' ')' '{' statement_list '}' .

    $default  reduce using rule 75 (function_declaration)


state 131

   64 parameter_list: DATA_TYPE VARIABLE '[' ']' . ',' parameter_list
   65               | DATA_TYPE VARIABLE '[' ']' .
   66               | DATA_TYPE VARIABLE '[' ']' . '[' ']' ',' parameter_list
   67               | DATA_TYPE VARIABLE '[' ']' . '[' ']'

    '['  shift, and go to state 145
    ','  shift, and go to state 146

    $default  reduce using rule 65 (parameter_list)


state 132

   62 parameter_list: DATA_TYPE VARIABLE ',' parameter_list .

    $default  reduce using rule 62 (parameter_list)


state 133

   74 function_declaration: TYPE_VOID function_name '(' parameter_list ')' '{' statement_list . '}'

    '}'  shift, and go to state 147


state 134

   37 control_statement: IF '(' expression ')' '{' statement_list '}' .
   38                  | IF '(' expression ')' '{' statement_list '}' . ELSE '{' statement_list '}'
   39                  | IF '(' expression ')' '{' statement_list '}' . ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'

    ELIF  shift, and go to state 148
    ELSE  shift, and go to state 149

    $default  reduce using rule 37 (control_statement)


state 135

   42 loops: FOR VARIABLE ASSIGNMENT expression ',' expression ',' . expression '{' statement_list '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 150
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 136

   41 loops: FOR VARIABLE ASSIGNMENT expression ',' expression '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 151
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 137

   43 loops: WHILE '(' expression ')' '{' statement_list '}' .

    $default  reduce using rule 43 (loops)


state 138

   56 expression: VARIABLE '[' expression ']' '[' expression ']' .

    $default  reduce using rule 56 (expression)


state 139

   40 control_statement: '(' expression ')' '?' statement ':' statement .

    $default  reduce using rule 40 (control_statement)


state 140

   31 variable_list: VARIABLE '[' expression ']' ASSIGNMENT '{' . expression '}' ',' variable_list
   32              | VARIABLE '[' expression ']' ASSIGNMENT '{' . expression '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 152
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 141

   33 variable_list: VARIABLE '[' expression ']' '[' expression . ']' ',' variable_list
   34              | VARIABLE '[' expression ']' '[' expression . ']'
   35              | VARIABLE '[' expression ']' '[' expression . ']' ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE '[' expression ']' '[' expression . ']' ASSIGNMENT '{' expression '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ']'         shift, and go to state 153

    operator  go to state 62


state 142

   29 variable_list: VARIABLE '[' expression ']' ',' variable_list .

    $default  reduce using rule 29 (variable_list)


state 143

   73 function_declaration: DATA_TYPE function_name '(' ')' '{' statement_list '}' .

    $default  reduce using rule 73 (function_declaration)


state 144

   72 function_declaration: DATA_TYPE function_name '(' parameter_list ')' '{' statement_list . '}'

    '}'  shift, and go to state 154


state 145

   66 parameter_list: DATA_TYPE VARIABLE '[' ']' '[' . ']' ',' parameter_list
   67               | DATA_TYPE VARIABLE '[' ']' '[' . ']'

    ']'  shift, and go to state 155


state 146

   64 parameter_list: DATA_TYPE VARIABLE '[' ']' ',' . parameter_list

    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17

    DATA_TYPE       go to state 84
    parameter_list  go to state 156


state 147

   74 function_declaration: TYPE_VOID function_name '(' parameter_list ')' '{' statement_list '}' .

    $default  reduce using rule 74 (function_declaration)


state 148

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF . '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}'

    '('  shift, and go to state 157


state 149

   38 control_statement: IF '(' expression ')' '{' statement_list '}' ELSE . '{' statement_list '}'

    '{'  shift, and go to state 158


state 150

   42 loops: FOR VARIABLE ASSIGNMENT expression ',' expression ',' expression . '{' statement_list '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    '{'         shift, and go to state 159

    operator  go to state 62


state 151

   41 loops: FOR VARIABLE ASSIGNMENT expression ',' expression '{' statement_list . '}'

    '}'  shift, and go to state 160


state 152

   31 variable_list: VARIABLE '[' expression ']' ASSIGNMENT '{' expression . '}' ',' variable_list
   32              | VARIABLE '[' expression ']' ASSIGNMENT '{' expression . '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    '}'         shift, and go to state 161

    operator  go to state 62


state 153

   33 variable_list: VARIABLE '[' expression ']' '[' expression ']' . ',' variable_list
   34              | VARIABLE '[' expression ']' '[' expression ']' .
   35              | VARIABLE '[' expression ']' '[' expression ']' . ASSIGNMENT '{' expression '}' ',' variable_list
   36              | VARIABLE '[' expression ']' '[' expression ']' . ASSIGNMENT '{' expression '}'

    ASSIGNMENT  shift, and go to state 162
    ','         shift, and go to state 163

    $default  reduce using rule 34 (variable_list)


state 154

   72 function_declaration: DATA_TYPE function_name '(' parameter_list ')' '{' statement_list '}' .

    $default  reduce using rule 72 (function_declaration)


state 155

   66 parameter_list: DATA_TYPE VARIABLE '[' ']' '[' ']' . ',' parameter_list
   67               | DATA_TYPE VARIABLE '[' ']' '[' ']' .

    ','  shift, and go to state 164

    $default  reduce using rule 67 (parameter_list)


state 156

   64 parameter_list: DATA_TYPE VARIABLE '[' ']' ',' parameter_list .

    $default  reduce using rule 64 (parameter_list)


state 157

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' . expression ')' '{' statement_list '}' ELSE '{' statement_list '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 165
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 158

   38 control_statement: IF '(' expression ')' '{' statement_list '}' ELSE '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 166
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 159

   42 loops: FOR VARIABLE ASSIGNMENT expression ',' expression ',' expression '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 167
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 160

   41 loops: FOR VARIABLE ASSIGNMENT expression ',' expression '{' statement_list '}' .

    $default  reduce using rule 41 (loops)


state 161

   31 variable_list: VARIABLE '[' expression ']' ASSIGNMENT '{' expression '}' . ',' variable_list
   32              | VARIABLE '[' expression ']' ASSIGNMENT '{' expression '}' .

    ','  shift, and go to state 168

    $default  reduce using rule 32 (variable_list)


state 162

   35 variable_list: VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT . '{' expression '}' ',' variable_list
   36              | VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT . '{' expression '}'

    '{'  shift, and go to state 169


state 163

   33 variable_list: VARIABLE '[' expression ']' '[' expression ']' ',' . variable_list

    VARIABLE  shift, and go to state 95

    variable_list  go to state 170


state 164

   66 parameter_list: DATA_TYPE VARIABLE '[' ']' '[' ']' ',' . parameter_list

    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17

    DATA_TYPE       go to state 84
    parameter_list  go to state 171


state 165

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression . ')' '{' statement_list '}' ELSE '{' statement_list '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    ')'         shift, and go to state 172

    operator  go to state 62


state 166

   38 control_statement: IF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list . '}'

    '}'  shift, and go to state 173


state 167

   42 loops: FOR VARIABLE ASSIGNMENT expression ',' expression ',' expression '{' statement_list . '}'

    '}'  shift, and go to state 174


state 168

   31 variable_list: VARIABLE '[' expression ']' ASSIGNMENT '{' expression '}' ',' . variable_list

    VARIABLE  shift, and go to state 95

    variable_list  go to state 175


state 169

   35 variable_list: VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' . expression '}' ',' variable_list
   36              | VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' . expression '}'

    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 40

    DATA_TYPE             go to state 35
    VALUE                 go to state 23
    expression            go to state 176
    assignment_statement  go to state 42
    function_name         go to state 31
    function_call         go to state 43


state 170

   33 variable_list: VARIABLE '[' expression ']' '[' expression ']' ',' variable_list .

    $default  reduce using rule 33 (variable_list)


state 171

   66 parameter_list: DATA_TYPE VARIABLE '[' ']' '[' ']' ',' parameter_list .

    $default  reduce using rule 66 (parameter_list)


state 172

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' . '{' statement_list '}' ELSE '{' statement_list '}'

    '{'  shift, and go to state 177


state 173

   38 control_statement: IF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}' .

    $default  reduce using rule 38 (control_statement)


state 174

   42 loops: FOR VARIABLE ASSIGNMENT expression ',' expression ',' expression '{' statement_list '}' .

    $default  reduce using rule 42 (loops)


state 175

   31 variable_list: VARIABLE '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list .

    $default  reduce using rule 31 (variable_list)


state 176

   35 variable_list: VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression . '}' ',' variable_list
   36              | VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression . '}'
   52 expression: expression . operator expression

    UNARY       shift, and go to state 56
    BINARY      shift, and go to state 57
    ARITHMATIC  shift, and go to state 58
    LOGICAL     shift, and go to state 59
    ASSIGNMENT  shift, and go to state 60
    '}'         shift, and go to state 178

    operator  go to state 62


state 177

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' . statement_list '}' ELSE '{' statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 179
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 178

   35 variable_list: VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}' . ',' variable_list
   36              | VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}' .

    ','  shift, and go to state 180

    $default  reduce using rule 36 (variable_list)


state 179

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list . '}' ELSE '{' statement_list '}'

    '}'  shift, and go to state 181


state 180

   35 variable_list: VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}' ',' . variable_list

    VARIABLE  shift, and go to state 95

    variable_list  go to state 182


state 181

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' . ELSE '{' statement_list '}'

    ELSE  shift, and go to state 183


state 182

   35 variable_list: VARIABLE '[' expression ']' '[' expression ']' ASSIGNMENT '{' expression '}' ',' variable_list .

    $default  reduce using rule 35 (variable_list)


state 183

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE . '{' statement_list '}'

    '{'  shift, and go to state 184


state 184

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' . statement_list '}'

    TYPE_VOID   shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    RETURN      shift, and go to state 5
    BREAK       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    CHAR        shift, and go to state 9
    BOOL        shift, and go to state 10
    STRING      shift, and go to state 11
    VARIABLE    shift, and go to state 12
    TYPE_INT    shift, and go to state 13
    TYPE_FLOAT  shift, and go to state 14
    TYPE_CHAR   shift, and go to state 15
    TYPE_BOOL   shift, and go to state 16
    TYPE_FILE   shift, and go to state 17
    '('         shift, and go to state 18

    statement_list         go to state 185
    statement              go to state 21
    DATA_TYPE              go to state 22
    VALUE                  go to state 23
    declaration_statement  go to state 24
    control_statement      go to state 25
    loops                  go to state 26
    break_statement        go to state 27
    return_statement       go to state 28
    expression             go to state 29
    assignment_statement   go to state 30
    function_name          go to state 31
    function_declaration   go to state 32
    function_call          go to state 33


state 185

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list . '}'

    '}'  shift, and go to state 186


state 186

   39 control_statement: IF '(' expression ')' '{' statement_list '}' ELIF '(' expression ')' '{' statement_list '}' ELSE '{' statement_list '}' .

    $default  reduce using rule 39 (control_statement)
